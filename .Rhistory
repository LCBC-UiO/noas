source('/net/tsd-evs.tsd.usit.no/p23/data/durable/incoming/nettskjema/98445/output/cleanup.R')
dt
data
data <- dt[1,]
data
dt <- read_tsv("UpdateTabData-98445_cleaned.tsv")
data <- dt[1,]
data$AE_Date
data$AE_Situation
dt <- read.table("UpdateTabData-98445_cleaned.tsv", header = TRUE, sep = "\t",
stringsAsFactors = FALSE)
dt
dt$Birth_Date
as.Date(dt$Birth_Date)
as.Date(dt$Birth_Date, format = "%d.%m.%Y")
library(dplyr)
dt <- read.table("UpdateTabData-98445_cleaned.tsv", header = TRUE, sep = "\t",
stringsAsFactors = FALSE) %>%
mutate_at(vars(ends_with("Date")), function(x) as.Date(x, format = "%d.%m.%Y"))
data <- dt[1,]
data
data$AE_Date - data$Birth_Date
as.numeric(data$AE_Date - data$Birth_Date)
as.numeric(data$AE_Date - data$Birth_Date)/365.25
round(as.numeric(data$AE_Date - data$Birth_Date)/365.25, 2)
data
data$AE_Event_Desc
cat(data$AE_Event_Descs)
cat(data$AE_Event_Desc)
.libPaths(c( "/net/p01-c2io-nfs/projects/p23/tools/r/r_libs/3.6.0", .libPaths()))
library(dplyr)
dt <- read.table("UpdateTabData-98445_cleaned.tsv", header = TRUE, sep = "\t",
stringsAsFactors = FALSE) %>%
mutate_at(vars(ends_with("Date")), function(x) as.Date(x, format = "%d.%m.%Y"))
dt
dt <- read.table("UpdateTabData-98445_cleaned.tsv", header = TRUE, sep = "\t",
stringsAsFactors = FALSE) %>%
mutate_at(vars(ends_with("Date")), function(x) as.Date(x, format = "%d.%m.%Y")) %>%
filter(grepl("corona", AE_Event_Desc))
dt
Age = round(as.numeric(AE_Date - Birth_Date)/365.25, 0),
dt <- read.table("UpdateTabData-98445_cleaned.tsv", header = TRUE, sep = "\t",
stringsAsFactors = FALSE) %>%
mutate_at(vars(ends_with("Date")), function(x) as.Date(x, format = "%d.%m.%Y")) %>%
filter(grepl("corona", AE_Event_Desc)) %>%
mutate(
Age = round(as.numeric(AE_Date - Birth_Date)/365.25, 0),
delay = round(as.numeric(AE_Report_Date - AE_Date)/365.25, 0)
)
dt
dt <- read.table("UpdateTabData-98445_cleaned.tsv", header = TRUE, sep = "\t",
stringsAsFactors = FALSE) %>%
mutate_at(vars(ends_with("Date")), function(x) as.Date(x, format = "%d.%m.%Y")) %>%
filter(grepl("corona", AE_Event_Desc)) %>%
mutate(
Age = round(as.numeric(AE_Date - Birth_Date)/365.25, 0),
delay = round(as.numeric(AE_Report_Date - AE_Date)/24, 0)
)
dt
dt <- read.table("UpdateTabData-98445_cleaned.tsv", header = TRUE, sep = "\t",
stringsAsFactors = FALSE) %>%
mutate_at(vars(ends_with("Date")), function(x) as.Date(x, format = "%d.%m.%Y")) %>%
filter(grepl("corona", AE_Event_Desc)) %>%
mutate(
Age = round(as.numeric(AE_Date - Birth_Date)/365.25, 0),
delay = round(as.numeric(AE_Report_Date - AE_Date), 0)
)
delay
dt
library(ggplot2)
ggplot(dt, aes(x=AE_Date, y=..count..)) + geom_line()
dt %>% group_by(AE_Date) %>% tally
dt %>% group_by(AE_Date) %>% tally %>% ggplot(aes(x=AE_Date, y=n)) + geom_line()
ggplot(dt, aes(x=AE_Date)) + gegeom_histogram()
ggplot(dt, aes(x=AE_Date)) + geom_histogram()
dt
dt$Age
paste(dt$Age, collapse=",")
paste(dt$Age, collapse=" ,")
getwd()
rmarkdown::dt
dt
as_tibble(dt)
source('/net/tsd-evs.tsd.usit.no/p23/data/durable/incoming/nettskjema/98445/output/cleanup.R')
dt
data
dt
dt %>%
gather(key, value, matches("[0-9]$"))
dt %>%
gather(key, value, matches("[0-9]$")) %>%
select(1:3, key, value)
dt %>%
gather(key, value, matches("[0-9]$")) %>%
select(1:3, key, value) %>%
filter(!is.na(value))
dt %>%
gather(key, value, matches("[0-9]$")) %>%
select(1:3, key, value) %>%
filter(!is.na(value)) %>%
group_by_at(vars(SubmissionId:AE_Comments))
dt %>%
gather(key, value, matches("[0-9]$")) %>%
select(1:3, key, value) %>%
filter(!is.na(value)) %>%
group_by_at(SubmissionId:AE_Comments)
dt %>%
gather(key, value, matches("[0-9]$")) %>%
select(1:3, key, value) %>%
filter(!is.na(value)) %>%
group_by(SubmissionId:AE_Comments)
dt %>%
gather(key, value, matches("[0-9]$")) %>%
select(1:3, key, value) %>%
filter(!is.na(value)) %>%
group_by_at(vars(SubmissionId:AE_Comments))
dt %>%
gather(key, value, matches("[0-9]$")) %>%
select(1:3, key, value) %>%
filter(!is.na(value)) %>%
group_by_at(vars(-key, -value))
dt %>%
gather(key, value, matches("[0-9]$")) %>%
select(1:3, key, value) %>%
filter(!is.na(value)) %>%
group_by_at(vars(-key, -value)) %>%
summarise(list(value = paste(value, collapse = ",")))
dt %>%
gather(key, value, matches("[0-9]$")) %>%
select(1:3, key, value) %>%
filter(!is.na(value)) %>%
group_by_at(vars(-key, -value)) %>%
summarise(value = paste(value, collapse = ","))
dt %>%
gather(key, value, matches("[0-9]$")) %>%
select(1:3, key, value) %>%
filter(!is.na(value)) %>%
mutate(key = gsub("_[0-9]$", "", key)) %>%
group_by_at(vars(-value)) %>%
summarise(value = paste(value, collapse = ","))
dt %>%
gather(key, value, matches("[0-9]$")) %>%
select(1:3, key, value) %>%
filter(!is.na(value)) %>%
mutate(key = gsub("_[0-9]$", "", key)) %>%
group_by_at(vars(-value)) %>%
summarise(value = paste(value, collapse = ",")) %>%
ungroup() %>%
spread(key, value)
dt %>%
gather(key, value, matches("[0-9]$")) %>%
filter(!is.na(value)) %>%
mutate(key = gsub("_[0-9]$", "", key)) %>%
group_by_at(vars(-value)) %>%
summarise(value = paste(value, collapse = ",")) %>%
ungroup() %>%
spread(key, value)
dt_restruct <- dt %>%
gather(key, value, matches("[0-9]$")) %>%
filter(!is.na(value)) %>%
mutate(key = gsub("_[0-9]$", "", key)) %>%
group_by_at(vars(-value)) %>%
summarise(value = paste(value, collapse = ",")) %>%
ungroup() %>%
spread(key, value)
outfile <- gsub(orig_string, "_restruct.tsv", ff[grep(orig_string, ff)])
message(paste("Writing restructured file to:", outfile))
write_tsv(dt_restruct, path=outfile)
tmp <- dt_restruct[1,]
data <- dt_restruct[1,]
data
dt <- read.table("UpdateTabData-98445_restruct.tsv", header = TRUE, sep = "\t",
stringsAsFactors = FALSE) %>%
mutate_at(vars(ends_with("Date")), function(x) as.Date(x, format = "%d.%m.%Y"))
data <- dt[1,]
data
dt <- read.table("UpdateTabData-98445_restruct.tsv", header = TRUE, sep = "\t",
stringsAsFactors = FALSE) %>%
mutate_at(vars(ends_with("Date")), function(x) as.Date(x, format = "%d.%m.%Y")) %>%
as_tibble()
data <- dt[1,]
data
data$SubmissionId
data %>% View
.libPaths(c( "/net/p01-c2io-nfs/projects/p23/tools/r/r_libs/3.6.0", .libPaths()))
library(dplyr)
dt <- read.table("UpdateTabData-98445_restruct.tsv", header = TRUE, sep = "\t",
stringsAsFactors = FALSE) %>%
mutate_at(vars(ends_with("Date")), function(x) as.Date(x, format = "%d.%m.%Y")) %>%
as_tibble()
data <- dt[1,]
data$SubmissionId
data$AE_Report_Date
data$AE_Situation
data$Project_Name
data$AE_Date
round(as.numeric(data$AE_Date - data$Birth_Date)/365.25, 2)
data$AE_Seriousness
data$AE_Cause
tolower(data$AE_Cause)
data$AE_Event_Desc
data$AE_Comments
data
data$AE_Situation
is.neuro <- data$AE_Situation == "Neurotesting"
is.neuro
cat(paste(
"# Neurotesting  ",
"The event reported was during **neurotesting**.",
sep = "  "))
data %>% select(contains("Neuro"))
paste0("The event during neurotesting is categorised as _",
tolower(data$AE_Neuro_Event), "_")
source('/net/tsd-evs.tsd.usit.no/p23/data/durable/incoming/nettskjema/98445/output/cleanup.R')
data$AE_Response_OtherDesc
data$AE_Response
resp <- gsub("Calmed", "participant being calmed", data$AE_Response) %>%
gsub("RemovedMRI", "participant being removed from the MRI machine", .) %>%
gsub("ParticipantAbort", "participant aborting", .) %>%
gsub("OfferedTreat", "participant being offered food or drink", .) %>%
gsub("TesterAbort", "staff aborting", .)
resp
.libPaths(c( "/net/p01-c2io-nfs/projects/p23/tools/r/r_libs/3.6.0", .libPaths()))
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, error = FALSE)
library(dplyr)
dt <- read.table("UpdateTabData-98445_restruct.tsv", header = TRUE, sep = "\t",
stringsAsFactors = FALSE) %>%
mutate_at(vars(ends_with("Date")), function(x) as.Date(x, format = "%d.%m.%Y")) %>%
as_tibble()
data <- dt[1,]
is.neuro <- data$AE_Situation == "Neurotesting"
is.mri <- data$AE_Situation == "MRI"
is.questionnaire <- data$AE_Situation == "Questionnaire"
text <- function(...) cat(paste(..., sep = "\n"))
follow <- gsub("Call", "to call participant", data$AE_Followup) %>%
gsub("ParticipantInitiated", "participant contacted us and said things are fine", .) %>%
gsub("No", "situation requires no follow-up", .)
follow
data %>% select(contains("MRI"))
grepl("Crying", data$AE_MRI_Event)
data %>% select(contains("Quest"))
?lm
install.packages("kableEXtra")
i=1
tmp <- dt_restruct[i,]
filename <- paste0("generated_reports/", tmp$SubmissionId, ".html")
tmp
filename
tmp$AE_Situation
rmarkdown::render("ae_report_template.Rmd",
output_file = filename,
params = list(data = tmp,
title = paste("Adverse event during", tmp$AE_Situation)))
## make small report ----
new_events <- list.files("generated_reports/")
new_events
dt_restruct$SubmissionId
paste0(dt_restruct$SubmissionId, ".html")
filter(!grepl(list.files("generated_reports/"))
new_events <- paste0(dt_restruct$SubmissionId, ".html") %>%
filter(!grepl(list.files("generated_reports/")))
## make small report ----
new_events <- paste0(dt_restruct$SubmissionId, ".html") %>%
filter(!grepl(list.files("generated_reports/"), .))
## make small report ----
new_events <- paste0(dt_restruct$SubmissionId, ".html")
new_events
grepl(list.files("generated_reports/"), new_events)
!grepl(list.files("generated_reports/"), new_events)
new_events[!grepl(list.files("generated_reports/"), new_events)]
new_events <- new_events[!grepl(list.files("generated_reports/"), new_events)]
new_events
new_events <- as.numeric(gsub("\\.html", "", new_events))
new_events
i <- 4781264
filter(dt, SubmissionId == i)
for(i in new_events){
tmp <- filter(dt, SubmissionId == i)
filename <- paste0("generated_reports/", tmp$SubmissionId, ".html")
rmarkdown::render("ae_report_template.Rmd",
output_file = filename,
params = list(data = tmp,
title = paste("Adverse event during", tmp$AE_Situation)))
}
source('/net/tsd-evs.tsd.usit.no/p23/data/durable/incoming/nettskjema/98445/output/cleanup.R')
## make small report ----
new_events <- paste0(dt_restruct$SubmissionId, ".html")
list.files("generated_reports/")
generated <- list.files("generated_reports/")
generated
length(generated)
## make small report ----
new_events <- paste0(dt_restruct$SubmissionId, ".html")
generated <- list.files("generated_reports/")
if(length(generated) > 0) new_events <- new_events[!grepl(list.files("generated_reports/"), new_events)]
new_events <- as.numeric(gsub("\\.html", "", new_events))
new_events
for(i in new_events){
tmp <- filter(dt, SubmissionId == i)
filename <- paste0("generated_reports/", tmp$SubmissionId, ".html")
rmarkdown::render("ae_report_template.Rmd",
output_file = filename,
params = list(data = tmp,
title = paste("Adverse event during", tmp$AE_Situation)))
}
for(i in new_events){
tmp <- filter(dt_restruct, SubmissionId == i)
filename <- paste0("generated_reports/", tmp$SubmissionId, ".html")
rmarkdown::render("ae_report_template.Rmd",
output_file = filename,
params = list(data = tmp,
title = paste("Adverse event during", tmp$AE_Situation)))
}
## make small report ----
new_events <- paste0(dt_restruct$SubmissionId, ".html")
generated <- list.files("generated_reports/")
if(length(generated) > 0) new_events <- new_events[!grepl(list.files("generated_reports/"), new_events)]
new_events <- as.numeric(gsub("\\.html", "", new_events))
## make small report ----
new_events <- paste0(dt_restruct$SubmissionId, ".html")
source('/net/tsd-evs.tsd.usit.no/p23/data/durable/incoming/nettskjema/98445/output/cleanup.R')
for(i in new_events){
tmp <- filter(dt_restruct, SubmissionId == i)
filename <- paste0("generated_reports/", tmp$SubmissionId, ".html")
cat("Generating file for SubmissionID: ", i)
rmarkdown::render("ae_report_template.Rmd",
output_file = filename,
params = list(data = tmp,
title = paste("Adverse event during", tmp$AE_Situation)))
}
source('/net/tsd-evs.tsd.usit.no/p23/data/durable/incoming/nettskjema/98445/output/cleanup.R')
source('/net/tsd-evs.tsd.usit.no/p23/home/p23-athanasm/moasdb/r/db_start.R')
setwd("/tsd/p23/home/p23-athanasm/moasdb")
source('/net/tsd-evs.tsd.usit.no/p23/home/p23-athanasm/moasdb/r/db_start.R')
setwd("/tsd/p23/home/p23-athanasm/moasdb")
# get helper functions
source('r/helpers.R')
# establish connection
con <- moasdb_connect()
k <- read_sql("sql/init_db.sql")
j <- DBI::dbExecute(con, k)
# Populate core tables
library(tidyverse)
# get helper functions
source('r/helpers.R')
# establish connection
con <- moasdb_connect()
# Get legacy data
load("/tsd/p23/data/durable/MOAS/data/MOAS.RData")
MOAS <- MOAS %>%
mutate(CrossProject_ID = as.integer(as.character(CrossProject_ID)))
# project table ----
MOAS %>%
transmute(
id = Project_Name,
code = Project_Number) %>%
distinct() %>%
arrange(code) %>%
DBI::dbWriteTable(con, "project", .,
append = TRUE, row.name = FALSE)
# subject table ----
tmp <- MOAS %>%
transmute(
id = CrossProject_ID,
sex = Sex,
birthdate = Birth_Date) %>%
distinct() %>%
arrange(id) %>%
DBI::dbWriteTable(con, "subject", .,
append = TRUE, row.name = FALSE)
## wave table
tmp <- MOAS %>%
transmute(
project_id = Project_Name,
code = Project_Wave
) %>%
distinct() %>%
arrange(project_id, code) %>%
DBI::dbWriteTable(con, "wave", .,
append = TRUE, row.name = FALSE)
# visits table ---
MOAS %>%
transmute(
subject_id = CrossProject_ID,
project_id = Project_Name,
wave_code = Project_Wave,
visitdate = Test_Date
) %>%
distinct() %>%
arrange(subject_id) %>%
DBI::dbWriteTable(con, "visit", .,
append = TRUE, row.name = FALSE)
# get helper functions
source('r/helpers.R')
# establish connection
con <- moasdb_connect()
j <- DBI::dbExecute(con,
read_sql("sql/init_db.sql"))
# Populate core tables
# Populate longitudinal tables
# get helper functions
source('r/helpers.R')
# establish connection
con <- moasdb_connect()
db_dir <- "/tsd/p23/data/durable/tmp/db_clean_data_tmp/core/"
add_core_tab <- function(tab, con){
filenm <- list.files(db_dir, paste0(tab,".tsv"), full.names = TRUE)
dt <- read_dbtable(filenm)
DBI::dbWriteTable(con, tab, dt,
append = TRUE, row.name = FALSE)
}
# Add all core tables
lapply(c("projects", "subjects", "waves", "visits"),
add_core_tab, con = con)
# get helper functions
source('r/helpers.R')
# establish connection
con <- moasdb_connect()
db_dir <- "/tsd/p23/data/durable/tmp/db_clean_data_tmp/long/ehi/"
ffiles <- list.files(db_dir, "tsv$", full.names = TRUE)
ft <- lapply(ffiles, read_dbtable)
ft <- lapply(ft, dplyr::rename_all, .funs = function(x) gsub("ehi", "", x))
ft <- lapply(ft, dplyr::mutate_at,
.vars = dplyr::vars(starts_with("_")),
.funs = as.character)
ft
# lapply(ft[[5]], insert_table_long, con = con, table_name = "ehi")
insert_table_long(ft[[1]], con = con, table_name = "ehi")
# lapply(ft[[5]], insert_table_long, con = con, table_name = "ehi")
insert_table_long(ft[[1]], con = con, table_name = "ehi")
# lapply(ft[[5]], insert_table_long, con = con, table_name = "ehi")
insert_table_long(ft[[1]], con = con, table_name = "ehi")
insert_table_long(ft[[5]], con = con, table_name = "ehi")
# lapply(ft[[5]], insert_table_long, con = con, table_name = "ehi")
insert_table_long(ft[[1]], con = con, table_name = "ehi")
ffiles <- list.files(db_dir, "tsv$", full.names = TRUE)
ffiles
ft <- lapply(ffiles, read_dbtable)
ft <- lapply(ft, dplyr::rename_all, .funs = function(x) gsub("ehi", "", x))
ft <- lapply(ft, dplyr::mutate_at,
.vars = dplyr::vars(starts_with("_")),
.funs = as.character)
ft
